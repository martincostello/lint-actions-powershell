name: release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version to create the release for.'
        required: true
        type: string
      publish:
        description: 'If true, does not create the release as a draft.'
        required: false
        type: boolean
        default: false

permissions: {}

jobs:
  release:
    runs-on: [ ubuntu-latest ]

    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: false

    steps:

      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          filter: 'tree:0'
          show-progress: false
          token: ${{ secrets.COSTELLOBOT_TOKEN }}

      - name: Create release
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          DRAFT: ${{ inputs.publish != true }}
          VERSION: ${{ inputs.version }}
        with:
          github-token: ${{ secrets.COSTELLOBOT_TOKEN }}
          script: |
            const { repo, owner } = context.repo;
            const draft = process.env.DRAFT === 'true';
            
            let version = process.env.VERSION;

            if (version.startsWith('v')) {
              version = version.slice(1);
            }

            const tag_name = `v${version}`;
            const name = tag_name;
            const target_commitish = process.env.DEFAULT_BRANCH;

            const { data: release } = await github.rest.repos.createRelease({
              owner,
              repo,
              tag_name,
              target_commitish,
              name,
              draft,
              generate_release_notes: true,
            });

            core.notice(`Created release ${release.name}: ${release.html_url}`);
